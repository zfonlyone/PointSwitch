<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Batch_Rename" xml:space="preserve">
    <value>批量重命名</value>
  </data>
  <data name="Batch_Rename_en" xml:space="preserve">
    <value>Batch Rename</value>
  </data>
  <data name="Clear_directory" xml:space="preserve">
    <value>清空目录</value>
  </data>
  <data name="Clear_directory_en" xml:space="preserve">
    <value>Clear Folder</value>
  </data>
  <data name="incremental_addition" xml:space="preserve">
    <value>增量添加</value>
  </data>
  <data name="incremental_addition_en" xml:space="preserve">
    <value>Addition</value>
  </data>
  <data name="info_Dont_exist" xml:space="preserve">
    <value>文件夹不存在。</value>
  </data>
  <data name="info_Dont_exist_en" xml:space="preserve">
    <value>The folder doesn't exist.</value>
  </data>
  <data name="info_Dont_permission" xml:space="preserve">
    <value>没有权限访问文件夹。</value>
  </data>
  <data name="info_Dont_permission_en" xml:space="preserve">
    <value>You don't have permission to access the folder.</value>
  </data>
  <data name="info_INI_error" xml:space="preserve">
    <value>从INI文件加载配置信息时发生错误：{ex.Message}</value>
  </data>
  <data name="info_INI_error_en" xml:space="preserve">
    <value>An error occurred while loading configuration information from the INI file: {ex.Message}</value>
  </data>
  <data name="info_IO_error" xml:space="preserve">
    <value>发生IO错误。</value>
  </data>
  <data name="info_IO_error_en" xml:space="preserve">
    <value>IO error occurred.</value>
  </data>
  <data name="info_IO_samefile" xml:space="preserve">
    <value>发生IO错误。\n\n目录可能有同名文件:{sourceFolderPath}\n\n可使用重命名功能修改</value>
  </data>
  <data name="info_IO_samefile_en" xml:space="preserve">
    <value>IO error occurred.\n\nThere may be files with the same name in the folder: {sourceFolderPath}\n\nYou can use the rename function to modify them.</value>
  </data>
  <data name="info_OK_copy" xml:space="preserve">
    <value>成功复制 {copiedFilesCount} 个文件。\n目标文件夹内共有 {targetFilesCount} 个文件。</value>
  </data>
  <data name="info_OK_copy_en" xml:space="preserve">
    <value>Successfully copied {copiedFilesCount} files.\nThere are {targetFilesCount} files in the target folder.</value>
  </data>
  <data name="info_OK_replaced" xml:space="preserve">
    <value>已成功替换 {replacedFilesCount} 个文件。</value>
  </data>
  <data name="info_OK_replaced_en" xml:space="preserve">
    <value>Successfully replaced {replacedFilesCount} files.</value>
  </data>
  <data name="info_select_folder" xml:space="preserve">
    <value>请先选择一个文件夹。</value>
  </data>
  <data name="info_select_folder_en" xml:space="preserve">
    <value>Please select a folder first.</value>
  </data>
  <data name="info_valid_folder" xml:space="preserve">
    <value>请输入一个有效的目录路径。</value>
  </data>
  <data name="info_valid_folder_en" xml:space="preserve">
    <value>Please enter a valid folder path.</value>
  </data>
  <data name="Language_Chinese" xml:space="preserve">
    <value>中文</value>
  </data>
  <data name="Language_English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="open_folder" xml:space="preserve">
    <value>打开目录</value>
  </data>
  <data name="open_folder_en" xml:space="preserve">
    <value>Open Folder</value>
  </data>
  <data name="point Folder" xml:space="preserve">
    <value>点位目录</value>
  </data>
  <data name="pointswitch" xml:space="preserve">
    <value>点位切换器</value>
  </data>
  <data name="pointswitch_en" xml:space="preserve">
    <value>PointSwitch</value>
  </data>
  <data name="point_Folder_en" xml:space="preserve">
    <value>Point Folder</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>重新加载</value>
  </data>
  <data name="Reload_en" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>一键替换</value>
  </data>
  <data name="Replace_en" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="teleports Folder" xml:space="preserve">
    <value>目标目录</value>
  </data>
  <data name="teleports_Folder_en" xml:space="preserve">
    <value>Teleports Folder</value>
  </data>
</root>